version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "myuser"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hospital-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - hospital-network

  # Go API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: hospital-api
    environment:
      DB_HOST: postgres
      DB_USER: myuser
      DB_PASSWORD: mypassword
      DB_NAME: mydatabase
      DB_PORT: 5432
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - hospital-network
    volumes:
      - ./logs:/app/logs
    
  # Nginx Reverse Proxy
  nginx:
    image: nginx:latest
    container_name: hospital-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - api
    networks:
      - hospital-network

networks:
  hospital-network:
    driver: bridge

volumes:
  postgres_data: